{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Gu\u00eda de Pr\u00e1cticas \u2b50","text":"<p>\u00a1Bienvenido/a! Este repositorio documenta mis experiencias y proyectos pr\u00e1cticos utilizando MkDocs con el tema Material \ud83d\udcda</p>"},{"location":"#repositorio-en-github-waad0401practica-mkdocs","title":"Repositorio en GitHub: waad0401/Practica-Mkdocs","text":""},{"location":"#que-encontraras-aqui","title":"\u00bfQu\u00e9 encontrar\u00e1s aqu\u00ed? \ud83d\udd0d","text":"<p>En este espacio recopilo los diferentes proyectos y ejercicios que he desarrollado a lo largo de mi aprendizaje. Cada secci\u00f3n incluye: - \u2705 Objetivos - \u2699\ufe0f Herramientas empleadas - \ud83d\udca1 Retos y soluciones - \ud83d\udccb Documentaci\u00f3n y referencias  </p>"},{"location":"#tecnologias-clave","title":"Tecnolog\u00edas Clave \ud83d\ude80","text":"<ul> <li>MkDocs : Generaci\u00f3n de documentaci\u00f3n de forma sencilla.  </li> <li>Material for MkDocs : Un tema moderno y personalizable para MkDocs.  </li> <li>Docker : Contenedorizaci\u00f3n para un despliegue eficiente.  </li> <li>GitHub Pages: Hospedaje gratuito de documentaci\u00f3n est\u00e1tica.  </li> </ul>"},{"location":"#lista-de-practicas","title":"Lista de Pr\u00e1cticas","text":"<ol> <li>Configuraci\u00f3n de WordPress en Docker \ud83d\udc0b </li> <li>Activaci\u00f3n de HTTPS con Docker \ud83d\udd10</li> </ol>"},{"location":"#contacto","title":"Contacto \ud83d\udce7","text":"<p>Si deseas saber m\u00e1s sobre mi trabajo o tienes alguna pregunta:</p> <ul> <li>GitHub</li> <li>LinkedIn</li> </ul> <p>\u00a1Gracias por visitar mi repositorio y espero que disfrutes revisando mis pr\u00e1cticas!</p>"},{"location":"Docker-HTTPS/","title":"Practica-Docker-HTTPS","text":"<p>En esta practica vamos a utilizar docker y docker compose para habilitar un protocolo https en prestashop y se ejecutara sobre los contenedores de docker. Para ello primero tendremos que tener una maquina con minimo 20 de espacio</p> <p>Para poder continuar y lanzar el script, se nos requiere que tengamos docker y docker compose instalados en la maquina <pre><code>apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin\n</code></pre> Con eso instalado ya podremos lanzar el script donde crearemos 3 contenedores, uno de mysql , el de Wordpress, y donde estara el certificado lets encrypt que actuara de proxy inverso para redirigir el trafico al contenedor de Prestashop</p>"},{"location":"Docker-HTTPS/#comprobaciones","title":"Comprobaciones","text":"<p>Comprobacion de que los contenedores se han creado correctamente. </p> <p>Ahora accedemos al la pagina de prestashop.  Como podemos ver tenemos el Prestashop installer, lo procederemos a instalar , teniendo en cuenta que tenemos que activar los parametros de SSL, y poniendo bien las variables de referencia a la base de datos. Una vez que se nos decarge se nos quedara la siguiente pagina: </p> <p>Ahora intentamos acceder la pagina de phpmyadmin, y tendremos el menu de inicio. </p> <p>Una vez que rellenamos los campos ya estaremos dentro del phpmyadmin y modemos ver las bases de datos del contenedor. </p>"},{"location":"Docker-WP/","title":"Practica-Docker-WP","text":"<p>En esta practica vamos a utilizar docker y docker compose para habilitar un protocolo https en prestashop y se ejecutara sobre los contenedores de docker. Para ello primero tendremos que tener una maquina con minimo 20 de espacio</p> <p>Para poder continuar y lanzar el script, se nos requiere que tengamos docker y docker compose instalados en la maquina <pre><code>apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin\n</code></pre> Con eso instalado ya podremos lanzar el script donde crearemos 3 contenedores, uno de mysql , el de Wordpress, y donde estara el certificado lets encrypt que actuara de proxy inverso para redirigir el trafico al contenedor de Wordpress</p>"},{"location":"Docker-WP/#comprobaciones","title":"Comprobaciones","text":"<p>Comprobacion de que los contenedores se han creado correctamente. </p> <p>Comprobacion que los contenedores estan activos y ejecutandose. </p> <p>Una vez que accedemos configuramos para comprobar que la base de datos funciona correctamente, conectandonos al phpmyadmin. Menu de inicio: </p> <p>Base de datos: </p> <p>Ahora comprobaremos que el wordpress funciona correctamente. </p>"}]}